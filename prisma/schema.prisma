generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String              @id @default(uuid())
  name          String?
  email         String?             @unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String   @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Facility {
  id      String   @id @default(uuid())
  name    String
  prefecture String
  city    String
  createdAt  DateTime @default(now())

  // 施設に所属する利用者
  customer Customer[]
}

model Customer {
  id         String   @id @default(uuid())
  name       String
  facility   Facility @relation(fields: [facilityId], references: [id], onDelete: Cascade)
  facilityId String
  procedureManuals ProcedureManual[]

  gender     Gender
  handicap   String  // 障害名
  age        Int

  @@index([facilityId])
}

model ProcedureManual {
  id                String   @id @default(uuid())
  title             String
  steps             Json
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // 利用者とのリレーション
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String

  @@index([customerId])
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
